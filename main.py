from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler
from datetime import datetime
from g4f.client import Client
import g4f
import nest_asyncio
nest_asyncio.apply()
# g4f.disable_ssl_verification() 
# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = '7495078009:AAG9m37Qhx5rfC98RLuHLRcBq_IuBc_Ks1Q'
 
client = Client()
schedules = {
    'this_week': {
        'url': 'https://imgur.com/a/ZpD9st1',
        'week_number': datetime.now().isocalendar()[1]  # –ù–æ–º–µ—Ä –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ç–∏–∂–Ω—è
    },
    'week_1': {
        'url': 'https://imgur.com/a/IxAjtOc',
        'week_number': datetime.now().isocalendar()[1] + 1  # –¢–∏–∂–¥–µ–Ω—å 1
    },
    'week_2': {
        'url': 'https://imgur.com/a/ZpD9st1',
        'week_number': datetime.now().isocalendar()[1] + 2  # –¢–∏–∂–¥–µ–Ω—å 2
    },
    'week_3': {
        'url': 'https://imgur.com/a/qcie19e',
        'week_number': datetime.now().isocalendar()[1] + 3  # –¢–∏–∂–¥–µ–Ω—å 3
    },
    'week_4': {
        'url': 'https://imgur.com/a/2WgxENd',
        'week_number': datetime.now().isocalendar()[1] + 4  # –¢–∏–∂–¥–µ–Ω—å 4
    },
    'week_5': {
        'url': 'https://imgur.com/a/UIKp04q',
        'week_number': datetime.now().isocalendar()[1] + 5  # –¢–∏–∂–¥–µ–Ω—å 5
    },
    'week_6': {
        'url': 'https://imgur.com/a/YaN28Rz',
        'week_number': datetime.now().isocalendar()[1] + 6  # –¢–∏–∂–¥–µ–Ω—å 6
    },
    'week_7': {
        'url': 'https://imgur.com/a/iNY4mOX',
        'week_number': datetime.now().isocalendar()[1] + 7  # –¢–∏–∂–¥–µ–Ω—å 7
    },
    'week_8': {
        'url': 'https://imgur.com/a/rFNDOgi',
        'week_number': datetime.now().isocalendar()[1] + 8  # –¢–∏–∂–¥–µ–Ω—å 8
    },
    'week_9': {
        'url': 'https://imgur.com/a/lBUXqig',
        'week_number': datetime.now().isocalendar()[1] + 9  # –¢–∏–∂–¥–µ–Ω—å 8
    },
    'week_10': {
        'url': 'https://imgur.com/a/94roFmD',
        'week_number': datetime.now().isocalendar()[1] + 10  # –¢–∏–∂–¥–µ–Ω—å 8
    },
    'week_11': {
        'url': 'https://imgur.com/a/gpykloU',
        'week_number': datetime.now().isocalendar()[1] + 11  # –¢–∏–∂–¥–µ–Ω—å 8
    },
    'week_12': {
        'url': 'https://imgur.com/a/uCDDJ4l',
        'week_number': datetime.now().isocalendar()[1] + 12  # –¢–∏–∂–¥–µ–Ω—å 8
    },
    'week_13': {
        'url': 'https://imgur.com/a/mWFnmSv',
        'week_number': datetime.now().isocalendar()[1] + 13  # –¢–∏–∂–¥–µ–Ω—å 8
    },
    # –î–æ–¥–∞–π —ñ–Ω—à—ñ —Ç–∏–∂–Ω—ñ –∑–∞ –ø–æ—Ç—Ä–µ–±–∏
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–µ–Ω—é
def create_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üóì –ü–æ—Ç–æ—á–Ω–∏–π —Ä–æ–∑–∫–ª–∞–¥", callback_data='this_week')],
        [InlineKeyboardButton("üìÖ –û–±—Ä–∞—Ç–∏ —ñ–Ω—à–∏–π —Ç–∏–∂–¥–µ–Ω—å", callback_data='choose_week')],
        [InlineKeyboardButton("ü§£ –ê–Ω–µ–∫–¥–æ—Ç –¥–Ω—è", callback_data='anekdot_day')]
    ])

# –§—É–Ω–∫—Ü—ñ—è —Å—Ç–∞—Ä—Ç—É
async def start(update: Update, context):
    user = update.message.from_user  # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    username = user.username
    await update.message.reply_text(f'–í—ñ—Ç–∞—é, {username}! –í–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç–µ –≤–µ—Ä—Å—ñ—é AnekdotGPT4 0.2', reply_markup=create_menu())

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ä–æ–∑–∫–ª–∞–¥—É
async def get_schedule(update: Update, context):
    photo_url = schedules['this_week']['url']
    await update.message.reply_photo(photo=photo_url, reply_markup=create_menu())

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–Ω–µ–∫–¥–æ—Ç–∞
async def send_anekdot(update: Update, context):
    query = update.callback_query
    user = query.from_user  # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    username = user.username
    await query.answer()
    
    # –û—Ç—Ä–∏–º—É—î–º–æ –∞–Ω–µ–∫–¥–æ—Ç —á–µ—Ä–µ–∑ GPT API
    response = client.chat.completions.create(
        model="gpt-4",
        max_tokens=500,
        messages=[{"role": "user", "content": "–ü—Ä–∏–¥—É–º–∞–π –∫–æ—Ä–æ—Ç–∫–∏–π –∂–∞—Ä—Ç –∞–±–æ –∞–Ω–µ–∫–¥–æ—Ç –Ω–∞ –∫–æ–∂–µ–Ω –¥–µ–Ω—å, –≤–∫–ª—é—á–∞—é—á–∏ –æ–¥–Ω–æ–≥–æ –∞–±–æ –∫—ñ–ª—å–∫–æ—Ö –∑ —Ç–∞–∫–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ–≤: –î–∞–Ω—è, –í—ñ–∫–∞ (—è–∫–∞ –∑–∞–∫–æ—Ö–∞–Ω–∞ –≤ –ù—ñ–∫—ñ—Ç—É), –î—ñ–º–∞, –ù—ñ–∫—ñ—Ç–∞, –ù–µ—Å—Ç–æ—Ä, —ñ –ê–Ω–∞–Ω–∞—Å. –ñ–∞—Ä—Ç –º–∞—î –±—É—Ç–∏ –≤–µ—Å–µ–ª–∏–º —ñ –∫—Ä–µ–∞—Ç–∏–≤–Ω–∏–º, –∞–ª–µ –Ω–µ –æ–±–æ–≤'—è–∑–∫–æ–≤–æ –≤—Å—ñ –ø–µ—Ä—Å–æ–Ω–∞–∂—ñ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –≤ –∫–æ–∂–Ω–æ–º—É –∂–∞—Ä—Ç—ñ."}],
    )
   # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î –≤—ñ–¥–ø–æ–≤—ñ–¥—å —ñ —á–∏ –º—ñ—Å—Ç–∏—Ç—å –≤–æ–Ω–∞ –¥–∞–Ω—ñ
    anekdot = response.choices[0].message.content 
    await query.message.reply_text(f"–ê–Ω–µ–∫–¥–æ—Ç –¥–ª—è {username}:\n{anekdot}", reply_markup=create_menu())

# –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ —Ä–æ–∑–∫–ª–∞–¥—É
async def send_schedule(update: Update, context):
    query = update.callback_query
    user = query.from_user  # –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    username = user.username
    await query.answer()

    if query.data == 'this_week':
        photo_url = schedules['this_week']['url']
        if username == "zhdanovvvvvv":
            await query.message.reply_text(f"–ü—Ä–∏–≤—ñ—Ç, {username}! –î–æ–±—Ä–∏–π –¥–µ–Ω—å –ø–∞–Ω–µ —Ä–æ–∑—Ä–æ–±–Ω–∏–∫, —è –º–æ–ª—é—Å—è –Ω–∞ –≤–∞—Å:")
        elif username == "AkameGaNick":
            await query.message.reply_text(f"–ü—Ä–∏–≤—ñ—Ç, {username}! –ó–∞–π—á–∏–∫, –¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ - –¢–≤–æ—è –í—ñ–∫–∞):")
        elif username == "ap3lsinus":
            await query.message.reply_text(f"–ü—Ä–∏–≤—ñ—Ç, {username}! –ì–æ–ª–æ–≤–Ω–∏–π VIPERR 1337:")
        elif username == "kotan_sheva":
            await query.message.reply_text(f"–ü—Ä–∏–≤—ñ—Ç, {username}! –ï–ª—å—Ñ–±–∞—Ä—á–∏–∫–∏ –ø–æ 10 –µ–≤—Ä–æ, –ø–∏—à—ñ—Ç—å:")
        elif username == "h3llacious":
            await query.message.reply_text(f"–ü—Ä–∏–≤—ñ—Ç, {username}! –ù–Ø, –ö–ê–≤–∞–π, –ù–µ—Å—Ç–æ—Ä-—Å–∞–Ω, –≤–∞—â—ñ —à–ª—é—Ö–∏ –≤–∂–µ –∑–∞—Å–ø–∞–≤–Ω–µ–Ω—ñ:")
        elif username == "Rainf0rd":
            await query.message.reply_text(f"–ü—Ä–∏–≤—ñ—Ç, {username}! Rainf0rd - –∑–∞–¥–µ–∞–Ω–æ–Ω—ñ–ª—ñ:")

        await query.message.reply_photo(photo=photo_url, reply_markup=create_menu())

    elif query.data == 'choose_week':
        keyboard = [
            [InlineKeyboardButton("30/09", callback_data='week_1')],
            [InlineKeyboardButton("07/10", callback_data='week_2')],
            [InlineKeyboardButton("14/10", callback_data='week_3')],
            [InlineKeyboardButton("21/10", callback_data='week_4')],
            [InlineKeyboardButton("28/10 –∫–∞–Ω—ñ–∫—É–ª–∏", callback_data='week_5')],
            [InlineKeyboardButton("04/11", callback_data='week_6')],
            [InlineKeyboardButton("11/11", callback_data='week_7')],
            [InlineKeyboardButton("18/11", callback_data='week_8')],
            [InlineKeyboardButton("25/11", callback_data='week_9')],
            [InlineKeyboardButton("02/12", callback_data='week_10')],
            [InlineKeyboardButton("09/12", callback_data='week_11')],
            [InlineKeyboardButton("16/12", callback_data='week_12')],
            [InlineKeyboardButton("23/12 –∫–∞–Ω—ñ–∫—É–ª–∏", callback_data='week_13')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥ –¥–æ –º–µ–Ω—é", callback_data='start')],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text("–û–±–µ—Ä—ñ—Ç—å —Ç–∏–∂–¥–µ–Ω—å:", reply_markup=reply_markup)
    elif query.data == 'anekdot_day':
        await send_anekdot(update, context)  #
    elif query.data.startswith('week_'):
        week_data = schedules.get(query.data)
        if week_data:
            photo_url = week_data['url']
            await query.message.reply_photo(photo=photo_url, reply_markup=create_menu())
        else:
            await query.message.reply_text("–¶–µ–π —Ç–∏–∂–¥–µ–Ω—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π.", reply_markup=create_menu())
    
    elif query.data == 'start':
        await start(update=query, context=context)  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ query.message

# –û—Å–Ω–æ–≤–Ω–∏–π –±–ª–æ–∫ –ø—Ä–æ–≥—Ä–∞–º–∏
if __name__ == '__main__':
    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(CallbackQueryHandler(send_schedule))
    application.add_handler(CommandHandler('get_schedule', get_schedule))
    application.run_polling()
